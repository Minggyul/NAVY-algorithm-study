#include <iostream>

using namespace std;

int n;
int dp[1000000][3];

/*
  2 x 1 사이즈 경우, 아무것도 안 놓을 경우 1가지 | 왼쪽(오른쪽)에 놓을 경우 1가지    총 3가지
  2 x 2 사이즈 경우, 맨 위에 아무 것도 안 놓을 경우 3가지 | 왼쪽(오른쪽)에 놓을 경우 2가지    총 7가지
  2 x 3 사이즈 경우, 맨 위에 아무 것도 안 놓을 경우 7가지 | 왼쪽(오른쪽)에 놓을 경우 5가지    총 17가지
    ...

  즉, 2 x n 사이즈 때, 아무것도 안 놓을 경우 = 2 x (n-1) 사이즈의 경우의 수
                      왼쪽(오른쪽)에 놓을 경우 = 2 x (n-1) 사이즈의 맨 위에 아무 것도 안 놓을 경우 + 왼쪽(오른쪽)에 놓을 경우
  가 된다.

  이 점화식을 사용해서 풀면 문제가 해결된다.
*/


int main() {
    cin >> n;

    dp[0][0] = 3; // 경우의 수 총합
    dp[0][1] = 1; // 맨 위에 아무 것도 안 놓을 경우
    dp[0][2] = 1; // 왼쪽(오른쪽)에 놓을 경우

    for(int i = 1; i < n; i++) {
        dp[i][1] = dp[i - 1][0] % 9901;
        dp[i][2] = (dp[i - 1][1] + dp[i - 1][2]) % 9901;
        dp[i][0] = (dp[i][1] + 2 * dp[i][2]) % 9901;
    }

    cout << dp[n - 1][0];
    return 0;
}
