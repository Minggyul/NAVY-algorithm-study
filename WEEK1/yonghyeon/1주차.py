# -*- coding: utf-8 -*-
"""1주차.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1n_f0lNB-OD7hAR7AMETSTOuU9il_382z
"""

n = int(input())
t = int(input())

arr = [[0]*n for _ in range(n)]

num = 0 #배열 안 숫자
y = 0 #줄 위치
x = -1 #칸 위치
s = n
step = 1 #+-1

while s > 0:
    for _ in range(s): #가로이동
        x += step
        num += 1
        arr[y][x] = num
    s -= 1

    for _ in range(s): #세로이동
        y += step
        num += 1
        arr[y][x] = num
    step *= -1

for i in range(n):
    for j in range(n):
        print("%2d " % arr[i][j], end = ' ')
    print()

"""안에서부터 시작하는 달팽이(실패)"""

N = int(input()) #입력수 N
cd = int(input()) #좌표를 원하는 숫자

i, j = int(N/2), int(N/2) #중앙 시작
di = [0,1,0,-1] #우 하 좌 상
dj = [1,0,-1,0]
cnt =1 #출발 값 1
ni, nj = 0,0
dr = 0

arr = [[0]*N for _ in range(N)]

arr[i][j] = cnt
cnt +=1

while cnt< N**2 :
    if i<0 or j <0 or i>=N or j>=N:
        for i in range()

"""처음 시작을 n^n으로 시작(성공)
좌표 찾아햠 5.31

"""

n = int(input())
find = int(input())

arr = [[0]*n for _ in range(n)]

num = (n**2)+1 #배열 안 숫자
y = 0 #줄 위치
x = -1 #칸 위치
s = n
step = 1 #+-1

findy, findx = 0, -1

while s > 0:
    for _ in range(s): #가로이동
        x += step
        num -= 1
        arr[y][x] = num
        if num == find:
            findy, findx = y,x
    s -= 1

    for _ in range(s): #세로이동
        y += step
        num -= 1
        arr[y][x] = num
        if num == find:
            findy, findx = y,x
    step *= -1

for i in range(n):
    for j in range(n):
        print("%2d " % arr[i][j], end = ' ')
    print()

if findx >= 0 and findy >=0:
    print(findx, findy)

"""단어 뒤집기 2"""

a = str(input()).rstrip()
li = []
for i in a:
    if i == '<':
        print(''.join(li[::-1]))
        li.clear()
        li.append(i)
    elif i == '>':
        li.append(i)
        print(''.join(li))
        li.clear()
    elif i == ' ':
        print(''.join(li[::-1]))
        li.clear()
    else:
        li.append(i)

print(''.join(li[::-1]))